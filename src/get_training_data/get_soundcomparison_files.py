#!/usr/bin/env python

"""Download audio and transcription files from soundcomparisons.com."""

import re
import json
from pathlib import Path
from tqdm import tqdm
import urllib.request


URL_TEMPLATE="https://soundcomparisons.com/query/data?study={study}"

try:
    PATH = Path(__file__)
except NameError:
    PATH = Path("./get_soundcomparison_files.py")
PATH = PATH.absolute().parent.parent.parent / "data" / "soundcomparisons"
PATH.mkdir(exist_ok=True)

"https://soundcomparisons.com/export/csv?study=Vanuatu&languageswords=10,20,30,40,50,60,70,80,90,100,110,150,200,210,7010,7020,7030,7040,7050,810,820,7110,7170,7410,7420,7490,7520,7630,7710,7720,7730,7770,7800,7860,7880,7890,7920,7930,7940,7980,7990,2010,2050,2110,2120,2130,2210,2230,2240,2310,2330,2410,2420,2520,2610,2620,2630,2710,2720,2740,2840,4020,4030,4050,4100,4310,4320,4350,4360,3120,3210,3240,3410,3420,3430,3450,3490,3520,3810,3830,3840,3850,5120,5130,5150,5210,6220,5230,5240,6240,6250,6260,6280,6310,6320,5410,5420,5430,5510,5520,5530,5540,5810,5840,5850,5920,5930,6030,6090,6330,6510,6620,6810,8020,8030,8110,8120,8130,8140,8150,8180,8210,8220,8260,8270,8310,8320,8360,8370,8400,8410,8420,8430,8440,8510,8520,8540,8580,8590,8670,8680,8740,8800,8810,8870,8880,8890,8920,8930,8950,8960,8970,9000,9010,9020,9030,9040,9050,9060,9120,9130,9180,9220,9400,9500,9620,1010,1020,1023,1022,1021,1040,1052,1050,1060,1070,1072,1120,1210,1220,1230,1240,1250,1310,1320,1380,1390,1410,5010,5020,510&tsv"

def get_table_of_contents(study):
    with urllib.request.urlopen(
            URL_TEMPLATE.format(study=study)) as v:
        try:
            with urllib.request.urlopen(
                    URL_TEMPLATE.format(study=study)) as v:
                return json.loads(v.read().decode("utf-8"))
        except urllib.error.HTTPError:
            print("Study {:} not found.".format(study))
            return {"transcriptions": {}}

# https://soundcomparisons.com/query/data?global=True
for study in ["Europe", "Germanic", "Englishes", "Romance", "Slavic", "Celtic", "Andes", "Mapudungun", "Brazil", "Vanuatu"]:
    print(study)
    for id, form in tqdm(get_table_of_contents(study)["transcriptions"].items()):
        if "Phonetic" not in form or "soundPaths" not in form:
            continue
        if not form["soundPaths"]:
            continue
        if type(form["Phonetic"]) == str:
            form["Phonetic"] = [form["Phonetic"]]
        if type(form["soundPaths"]) == str:
            form["soundPaths"] = [form["soundPaths"]]
        if type(form["soundPaths"][0]) == str:
            form["soundPaths"] = [form["soundPaths"]]
        for ipa, sound_paths in zip(form["Phonetic"], form["soundPaths"]):
            if not ipa:
                continue
            if not sound_paths:
                continue
            sound_paths.sort(
                key=lambda file:
                {"wav": 0, "ogg": 1, "mp3": 2}.get(file[-3:], 3))
            url = sound_paths[0]
            name = Path(url).name
            if (PATH / name).exists():
                continue
            try:
                with urllib.request.urlopen(url) as remotesoundfile:
                    with (PATH / name).open("wb") as localsoundfile:
                        localsoundfile.write(remotesoundfile.read())
                with (PATH / name).with_suffix(".txt").open("w") as transcription:
                    transcription.write(ipa)
            except urllib.error.HTTPError:
                continue


